{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\softwareprojects\\\\excercizer\\\\exercise-frontend\\\\src\\\\AppRouter.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Home from './components/Home';\nimport Register from './components/Register';\nimport TrackExercise from './components/TrackExercise';\nimport ExerciseList from './components/ExerciseList';\nimport ExerciseGraph from './components/ExerciseGraph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AppRouter() {\n  _s();\n  // Initialize exerciseData as an empty array\n  const [exerciseData, setExerciseData] = useState([]);\n\n  // Fetch exerciseData when the component mounts\n  useEffect(() => {\n    // Fetch exercise data from your API endpoint and update exerciseData\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://127.0.0.1:8000/exercises/'); // Replace with your API endpoint\n        const data = await response.json();\n        setExerciseData(data);\n      } catch (error) {\n        console.error('Error fetching exercise data:', error);\n      }\n    };\n    fetchData();\n  }, []); // The empty dependency array ensures that this effect runs only once, when the component mounts\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/track-exercise\",\n        element: /*#__PURE__*/_jsxDEV(TrackExercise, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(AppRouter, \"/Znk7nDwHO4X6UZ/uM8+e9AAjVI=\");\n_c = AppRouter;\nexport default AppRouter;\nvar _c;\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Home","Register","TrackExercise","ExerciseList","ExerciseGraph","jsxDEV","_jsxDEV","AppRouter","_s","exerciseData","setExerciseData","fetchData","response","fetch","data","json","error","console","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","component","LoginForm","_c","$RefreshReg$"],"sources":["C:/Users/micha/softwareprojects/excercizer/exercise-frontend/src/AppRouter.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport Home from './components/Home';\r\nimport Register from './components/Register';\r\nimport TrackExercise from './components/TrackExercise';\r\nimport ExerciseList from './components/ExerciseList';\r\nimport ExerciseGraph from './components/ExerciseGraph';\r\n\r\n\r\nfunction AppRouter() {\r\n  // Initialize exerciseData as an empty array\r\n  const [exerciseData, setExerciseData] = useState([]);\r\n\r\n  // Fetch exerciseData when the component mounts\r\n  useEffect(() => {\r\n    // Fetch exercise data from your API endpoint and update exerciseData\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://127.0.0.1:8000/exercises/'); // Replace with your API endpoint\r\n        const data = await response.json();\r\n        setExerciseData(data);\r\n      } catch (error) {\r\n        console.error('Error fetching exercise data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []); // The empty dependency array ensures that this effect runs only once, when the component mounts\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/register\" element={<Register />} />\r\n        <Route path=\"/track-exercise\" element={<TrackExercise />} />\r\n        <Route path=\"/login\" component={<LoginForm/>} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default AppRouter;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvD,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;;EAEpD;EACAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,CAAC,CAAC,CAAC;QAClE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;QAClCL,eAAe,CAACI,IAAI,CAAC;MACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD;IACF,CAAC;IAEDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEL,OAAA,CAACT,MAAM;IAAAqB,QAAA,eACLZ,OAAA,CAACP,MAAM;MAAAmB,QAAA,gBACLZ,OAAA,CAACR,KAAK;QAACqB,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEd,OAAA,CAACL,QAAQ;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjDlB,OAAA,CAACR,KAAK;QAACqB,IAAI,EAAC,iBAAiB;QAACC,OAAO,eAAEd,OAAA,CAACJ,aAAa;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC5DlB,OAAA,CAACR,KAAK;QAACqB,IAAI,EAAC,QAAQ;QAACM,SAAS,eAAEnB,OAAA,CAACoB,SAAS;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEb;AAAChB,EAAA,CA7BQD,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AA+BlB,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
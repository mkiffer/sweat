{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\softwareprojects\\\\excercizer\\\\exercise-frontend\\\\src\\\\components\\\\ExerciseGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { CategoryScale, Chart, LinearScale, PointElement, LineElement } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, PointElement, LineElement);\nfunction ExerciseGraph({\n  totalVolumeData\n}) {\n  _s();\n  useEffect(() => {\n    // Clean up existing Chart.js instance before creating a new one\n    const chartContainer = document.getElementById('chart-container');\n    if (chartContainer) {\n      chartContainer.innerHTML = ''; // Remove any existing content\n    }\n  }, []);\n\n  // Check if totalVolumeData is undefined or empty\n  if (!totalVolumeData || totalVolumeData.length === 0) {\n    console.log(totalVolumeData);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Extract timestamps and volumes from totalVolumeData\n  const timestamps = totalVolumeData.map(data => new Date(data.date).toISOString());\n  const volumes = totalVolumeData.map(data => data.volume);\n  const data = {\n    labels: timestamps.map(timestamp => new Date(timestamp)),\n    datasets: [{\n      label: 'Total Volume',\n      data: volumes,\n      fill: false,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)'\n    }]\n  };\n  const config = {\n    type: 'line',\n    data: data\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Exercise Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      config: config\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(ExerciseGraph, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ExerciseGraph;\nexport default ExerciseGraph;\nvar _c;\n$RefreshReg$(_c, \"ExerciseGraph\");","map":{"version":3,"names":["React","useEffect","Line","CategoryScale","Chart","LinearScale","PointElement","LineElement","jsxDEV","_jsxDEV","register","ExerciseGraph","totalVolumeData","_s","chartContainer","document","getElementById","innerHTML","length","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","timestamps","map","data","Date","date","toISOString","volumes","volume","labels","timestamp","datasets","label","fill","backgroundColor","borderColor","config","type","_c","$RefreshReg$"],"sources":["C:/Users/micha/softwareprojects/excercizer/exercise-frontend/src/components/ExerciseGraph.js"],"sourcesContent":["\r\nimport React, { useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {CategoryScale, Chart, LinearScale, PointElement, LineElement} from 'chart.js'; \r\n\r\nChart.register(CategoryScale, LinearScale, PointElement, LineElement);\r\n\r\nfunction ExerciseGraph({ totalVolumeData }) {\r\n  \r\n  useEffect(() => {\r\n    // Clean up existing Chart.js instance before creating a new one\r\n    const chartContainer = document.getElementById('chart-container');\r\n    if (chartContainer) {\r\n      chartContainer.innerHTML = ''; // Remove any existing content\r\n    }\r\n  }, []);\r\n\r\n  // Check if totalVolumeData is undefined or empty\r\n  if (!totalVolumeData || totalVolumeData.length === 0) {\r\n    console.log(totalVolumeData);\r\n    return <div>No data to display</div>;\r\n  }\r\n\r\n  // Extract timestamps and volumes from totalVolumeData\r\n  const timestamps = totalVolumeData.map((data) => new Date(data.date).toISOString());\r\n  const volumes = totalVolumeData.map((data) => data.volume);\r\n  \r\n  const data = {\r\n    labels: timestamps.map((timestamp)=> new Date(timestamp)),\r\n    datasets: [\r\n      {\r\n        label: 'Total Volume',\r\n        data: volumes,\r\n        fill: false,\r\n        backgroundColor: 'rgba(75,192,192,0.4)',\r\n        borderColor: 'rgba(75,192,192,1)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const config = {\r\n    type: 'line',\r\n    data: data,\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Exercise Graph</h2>\r\n      <Line data={data} config = {config} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExerciseGraph;\r\n\r\n\r\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,QAAQ,iBAAiB;AACtC,SAAQC,aAAa,EAAEC,KAAK,EAAEC,WAAW,EAAEC,YAAY,EAAEC,WAAW,QAAO,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtFL,KAAK,CAACM,QAAQ,CAACP,aAAa,EAAEE,WAAW,EAAEC,YAAY,EAAEC,WAAW,CAAC;AAErE,SAASI,aAAaA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAE1CZ,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,cAAc,GAAGC,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;IACjE,IAAIF,cAAc,EAAE;MAClBA,cAAc,CAACG,SAAS,GAAG,EAAE,CAAC,CAAC;IACjC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAI,CAACL,eAAe,IAAIA,eAAe,CAACM,MAAM,KAAK,CAAC,EAAE;IACpDC,OAAO,CAACC,GAAG,CAACR,eAAe,CAAC;IAC5B,oBAAOH,OAAA;MAAAY,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;;EAEA;EACA,MAAMC,UAAU,GAAGd,eAAe,CAACe,GAAG,CAAEC,IAAI,IAAK,IAAIC,IAAI,CAACD,IAAI,CAACE,IAAI,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC;EACnF,MAAMC,OAAO,GAAGpB,eAAe,CAACe,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACK,MAAM,CAAC;EAE1D,MAAML,IAAI,GAAG;IACXM,MAAM,EAAER,UAAU,CAACC,GAAG,CAAEQ,SAAS,IAAI,IAAIN,IAAI,CAACM,SAAS,CAAC,CAAC;IACzDC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,cAAc;MACrBT,IAAI,EAAEI,OAAO;MACbM,IAAI,EAAE,KAAK;MACXC,eAAe,EAAE,sBAAsB;MACvCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,MAAM,GAAG;IACbC,IAAI,EAAE,MAAM;IACZd,IAAI,EAAEA;EACR,CAAC;EAED,oBACEnB,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhB,OAAA,CAACP,IAAI;MAAC0B,IAAI,EAAEA,IAAK;MAACa,MAAM,EAAIA;IAAO;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACZ,EAAA,CA5CQF,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AA8CtB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
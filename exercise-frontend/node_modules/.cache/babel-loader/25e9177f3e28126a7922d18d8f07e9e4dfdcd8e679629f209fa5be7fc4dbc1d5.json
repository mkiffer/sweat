{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\softwareprojects\\\\excercizer\\\\exercise-frontend\\\\src\\\\components\\\\TrackExercise.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ExerciseGraph from './ExerciseGraph'; // Import your ExerciseGraph component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TrackExercise() {\n  _s();\n  const [exerciseData, setExerciseData] = useState([]);\n  const [exerciseName, setExerciseName] = useState('');\n  const [exerciseReps, setExerciseReps] = useState(0);\n  const [exerciseWeight, setExerciseWeight] = useState(0);\n  const handleTrackExercise = async () => {\n    // Perform exercise tracking and update the backend\n    const newExercise = {\n      name: exerciseName,\n      reps: exerciseReps,\n      weight: exerciseWeight\n    };\n\n    // Send the new exercise data to the backend (you'll need to implement this part)\n    try {\n      await axios.post('http://localhost:8000/api/exercises/', newExercise);\n\n      // After successfully adding the exercise, you can fetch updated exercise data\n      const response = await axios.get('http://localhost:8000/api/exercises/');\n      const updatedExerciseData = response.data;\n\n      // Update the state with the updated exercise data\n      setExerciseData(updatedExerciseData);\n    } catch (error) {\n      console.error('Error tracking exercise:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Track Exercise\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exerciseName\",\n          children: \"Exercise Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"exerciseName\",\n          value: exerciseName,\n          onChange: e => setExerciseName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exerciseReps\",\n          children: \"Reps:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"exerciseReps\",\n          value: exerciseReps,\n          onChange: e => setExerciseReps(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"exerciseWeight\",\n          children: \"Weight (lbs):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"exerciseWeight\",\n          value: exerciseWeight,\n          onChange: e => setExerciseWeight(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleTrackExercise,\n        children: \"Track Exercise\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ExerciseGraph, {\n      exerciseData: exerciseData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(TrackExercise, \"UR82LJ5xfCSeSU79Ivg9or0ZRRs=\");\n_c = TrackExercise;\nexport default TrackExercise;\nvar _c;\n$RefreshReg$(_c, \"TrackExercise\");","map":{"version":3,"names":["React","useState","useEffect","axios","ExerciseGraph","jsxDEV","_jsxDEV","TrackExercise","_s","exerciseData","setExerciseData","exerciseName","setExerciseName","exerciseReps","setExerciseReps","exerciseWeight","setExerciseWeight","handleTrackExercise","newExercise","name","reps","weight","post","response","get","updatedExerciseData","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/micha/softwareprojects/excercizer/exercise-frontend/src/components/TrackExercise.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ExerciseGraph from './ExerciseGraph'; // Import your ExerciseGraph component\r\n\r\nfunction TrackExercise() {\r\n  const [exerciseData, setExerciseData] = useState([]);\r\n  const [exerciseName, setExerciseName] = useState('');\r\n  const [exerciseReps, setExerciseReps] = useState(0);\r\n  const [exerciseWeight, setExerciseWeight] = useState(0);\r\n\r\n  const handleTrackExercise = async () => {\r\n    // Perform exercise tracking and update the backend\r\n    const newExercise = {\r\n      name: exerciseName,\r\n      reps: exerciseReps,\r\n      weight: exerciseWeight,\r\n    };\r\n\r\n    // Send the new exercise data to the backend (you'll need to implement this part)\r\n    try {\r\n      await axios.post('http://localhost:8000/api/exercises/', newExercise);\r\n      \r\n      // After successfully adding the exercise, you can fetch updated exercise data\r\n      const response = await axios.get('http://localhost:8000/api/exercises/');\r\n      const updatedExerciseData = response.data;\r\n      \r\n      // Update the state with the updated exercise data\r\n      setExerciseData(updatedExerciseData);\r\n    } catch (error) {\r\n      console.error('Error tracking exercise:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Track Exercise</h2>\r\n      <form>\r\n        <div>\r\n          <label htmlFor=\"exerciseName\">Exercise Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"exerciseName\"\r\n            value={exerciseName}\r\n            onChange={(e) => setExerciseName(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"exerciseReps\">Reps:</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"exerciseReps\"\r\n            value={exerciseReps}\r\n            onChange={(e) => setExerciseReps(e.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"exerciseWeight\">Weight (lbs):</label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"exerciseWeight\"\r\n            value={exerciseWeight}\r\n            onChange={(e) => setExerciseWeight(e.target.value)}\r\n          />\r\n        </div>\r\n        <button type=\"button\" onClick={handleTrackExercise}>\r\n          Track Exercise\r\n        </button>\r\n      </form>\r\n\r\n      {/* Pass updated exerciseData to the ExerciseGraph component */}\r\n      <ExerciseGraph exerciseData={exerciseData} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrackExercise;\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,iBAAiB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EAEvD,MAAMgB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtC;IACA,MAAMC,WAAW,GAAG;MAClBC,IAAI,EAAER,YAAY;MAClBS,IAAI,EAAEP,YAAY;MAClBQ,MAAM,EAAEN;IACV,CAAC;;IAED;IACA,IAAI;MACF,MAAMZ,KAAK,CAACmB,IAAI,CAAC,sCAAsC,EAAEJ,WAAW,CAAC;;MAErE;MACA,MAAMK,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,sCAAsC,CAAC;MACxE,MAAMC,mBAAmB,GAAGF,QAAQ,CAACG,IAAI;;MAEzC;MACAhB,eAAe,CAACe,mBAAmB,CAAC;IACtC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD;EACF,CAAC;EAED,oBACErB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB3B,OAAA;MAAAuB,QAAA,gBACEvB,OAAA;QAAAuB,QAAA,gBACEvB,OAAA;UAAO4B,OAAO,EAAC,cAAc;UAAAL,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpD3B,OAAA;UACE6B,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,cAAc;UACjBC,KAAK,EAAE1B,YAAa;UACpB2B,QAAQ,EAAGC,CAAC,IAAK3B,eAAe,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN3B,OAAA;QAAAuB,QAAA,gBACEvB,OAAA;UAAO4B,OAAO,EAAC,cAAc;UAAAL,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC3C3B,OAAA;UACE6B,IAAI,EAAC,QAAQ;UACbC,EAAE,EAAC,cAAc;UACjBC,KAAK,EAAExB,YAAa;UACpByB,QAAQ,EAAGC,CAAC,IAAKzB,eAAe,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN3B,OAAA;QAAAuB,QAAA,gBACEvB,OAAA;UAAO4B,OAAO,EAAC,gBAAgB;UAAAL,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrD3B,OAAA;UACE6B,IAAI,EAAC,QAAQ;UACbC,EAAE,EAAC,gBAAgB;UACnBC,KAAK,EAAEtB,cAAe;UACtBuB,QAAQ,EAAGC,CAAC,IAAKvB,iBAAiB,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN3B,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAACM,OAAO,EAAExB,mBAAoB;QAAAY,QAAA,EAAC;MAEpD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAGP3B,OAAA,CAACF,aAAa;MAACK,YAAY,EAAEA;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEV;AAACzB,EAAA,CArEQD,aAAa;AAAAmC,EAAA,GAAbnC,aAAa;AAuEtB,eAAeA,aAAa;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micha\\\\softwareprojects\\\\excercizer\\\\exercise-frontend\\\\src\\\\components\\\\ExerciseGraph.js\";\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExerciseGraph({\n  totalVolumeData\n}) {\n  // Extract timestamps and volumes from totalVolumeData\n  const timestamps = totalVolumeData.map(data => new Date(data.date).toLocaleString());\n  const volumes = totalVolumeData.map(data => data.volume);\n\n  // Check if totalVolumeData is undefined or empty\n  if (!totalVolumeData || totalVolumeData.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No data to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n  console.log(timestamps);\n  console.log(volumes);\n  const data = {\n    labels: timestamps,\n    datasets: [{\n      label: 'Total Volume',\n      data: volumes,\n      fill: false,\n      backgroundColor: 'rgba(75,192,192,0.4)',\n      borderColor: 'rgba(75,192,192,1)'\n    }]\n  };\n  const options = {\n    scales: {\n      x: {\n        type: 'category',\n        labels: timestamps\n      },\n      y: {\n        beginAtZero: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Exercise Graph\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: data,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_c = ExerciseGraph;\nexport default ExerciseGraph;\nvar _c;\n$RefreshReg$(_c, \"ExerciseGraph\");","map":{"version":3,"names":["React","Line","jsxDEV","_jsxDEV","ExerciseGraph","totalVolumeData","timestamps","map","data","Date","date","toLocaleString","volumes","volume","length","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","x","type","y","beginAtZero","_c","$RefreshReg$"],"sources":["C:/Users/micha/softwareprojects/excercizer/exercise-frontend/src/components/ExerciseGraph.js"],"sourcesContent":["import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\n\r\nfunction ExerciseGraph({ totalVolumeData }) {\r\n // Extract timestamps and volumes from totalVolumeData\r\n const timestamps = totalVolumeData.map((data) => new Date(data.date).toLocaleString());\r\n const volumes = totalVolumeData.map((data) => data.volume);\r\n \r\n  // Check if totalVolumeData is undefined or empty\r\n  if (!totalVolumeData || totalVolumeData.length === 0) {\r\n    return <div>No data to display</div>;\r\n  }\r\n\r\n  \r\n  \r\n  console.log(timestamps);\r\n  console.log(volumes);\r\n  \r\n  const data = {\r\n    labels: timestamps,\r\n    datasets: [\r\n      {\r\n        label: 'Total Volume',\r\n        data: volumes,\r\n        fill: false,\r\n        backgroundColor: 'rgba(75,192,192,0.4)',\r\n        borderColor: 'rgba(75,192,192,1)',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      x: {\r\n        type: 'category',\r\n        labels: timestamps,\r\n      },\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Exercise Graph</h2>\r\n      <Line data={data} options={options} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ExerciseGraph;\r\n\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,aAAaA,CAAC;EAAEC;AAAgB,CAAC,EAAE;EAC3C;EACA,MAAMC,UAAU,GAAGD,eAAe,CAACE,GAAG,CAAEC,IAAI,IAAK,IAAIC,IAAI,CAACD,IAAI,CAACE,IAAI,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC;EACtF,MAAMC,OAAO,GAAGP,eAAe,CAACE,GAAG,CAAEC,IAAI,IAAKA,IAAI,CAACK,MAAM,CAAC;;EAEzD;EACA,IAAI,CAACR,eAAe,IAAIA,eAAe,CAACS,MAAM,KAAK,CAAC,EAAE;IACpD,oBAAOX,OAAA;MAAAY,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACtC;EAIAC,OAAO,CAACC,GAAG,CAACf,UAAU,CAAC;EACvBc,OAAO,CAACC,GAAG,CAACT,OAAO,CAAC;EAEpB,MAAMJ,IAAI,GAAG;IACXc,MAAM,EAAEhB,UAAU;IAClBiB,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,cAAc;MACrBhB,IAAI,EAAEI,OAAO;MACba,IAAI,EAAE,KAAK;MACXC,eAAe,EAAE,sBAAsB;MACvCC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC;EAED,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE;MACNC,CAAC,EAAE;QACDC,IAAI,EAAE,UAAU;QAChBT,MAAM,EAAEhB;MACV,CAAC;MACD0B,CAAC,EAAE;QACDC,WAAW,EAAE;MACf;IACF;EACF,CAAC;EAED,oBACE9B,OAAA;IAAAY,QAAA,gBACEZ,OAAA;MAAAY,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhB,OAAA,CAACF,IAAI;MAACO,IAAI,EAAEA,IAAK;MAACoB,OAAO,EAAEA;IAAQ;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV;AAACe,EAAA,GA9CQ9B,aAAa;AAgDtB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}